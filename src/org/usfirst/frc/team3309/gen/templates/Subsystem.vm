#set ($package="org.usfirst.frc.team"+$teamName+".subsystems;")
#set ($controlsImport="org.usfirst.team"+$teamName+".driverStation.Controls")

package $package

import library.ControlledSubsystem;
import library.controllers.*;
import library.actuators.*;
import library.sensors.*;
import com.ctre.*;
import edu.wpi.first.wpilibj.*;
import $controlsImport;

/*
*   @author Chase Blagden && Nico Machado
*   created on $date
*/
public class $className extends ControlledSubsystem {

    public static $className instance;

  #foreach ($motor in $motors)
    private $motor.getType() $motor.getName() = new $motor.getType()($motor.getPort());
  #end

  #foreach ($sensor in $sensors)
    private $sensor.getType() $sensor.getName() = new $sensor.getType()($sensor.getPort());
  #end

    public static $className getInstance() {
        if (instance == null) {
            instance = new $className;
        }
        return instance;
    }

    private $className() {
        super("$className");
  #foreach ($motor in $motors)
    #if ($motor.getMotorSensor() != "NoSensor" && $motor.getType() == "TalonSRXMC")
        #set ($motorSensor = $motor.getName() + ".set(FeedbackDevice." + $motor.getMotorSensor() + ")")
        $motorSensor;
    #end
  #end
    }

    @Override
    public void init() {

    }

    @Override
    public void initTeleop() {
        this.setController(new $algorithm.getType()());
    }

    @Override
    public void updateTeleop() {
        #foreach ($action in $actions)
            #if ($action.isBinary($action.getType()))
                #set ($controllerInput = "Controls."+$action.getController()+".get"+$action.getType() + ")")
                if ($controllerInput) {
                    #set ($motorSet = $action.getmMotor()+".set("+$action.getValue()+")")
                    $motorSet;
                }
            #else
                #set ($controllerInput = "Controls."+$action.getController()+".get"+$action.getType())
                double $action.getName() = $controllerInput;
                if ($action.getName() > $action.getThreshold()) {
                    #if ($action.isReverse())
                       #set ($motorSet = $action.getmMotor()+".set(-"+$action.getName()+")")
                    #else
                     #set ($motorSet = $action.getmMotor()+".set("+$action.getName()+")")
                    #end
                     $motorSet;
                }
            #end
        #end

    }

    @Override
    public void initAuto() {

    }

    @Override
    public void updateTeleop() {

    }

    @Override
    public void manualControl() {

    }

    @Override
    public void sendToDashboard() {

    }

}